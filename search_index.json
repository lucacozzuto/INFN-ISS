[["index.html", "INFN-ISS Part 1 Welcome here", " INFN-ISS Luca Cozzuto1 Part 1 Welcome here CRG, luca.cozzuto@crg.eu↩︎ "],["welcome-here-1.html", "Part 2 Welcome here", " Part 2 Welcome here par(mar = c(4, 4, 0.1, 0.1)) plot(c(0,1,2,3), c(0,1,2,3), pch = 19, type = “b”) # get the data from John Hopkins cases_web &lt;- &quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&quot; death_web &lt;- &quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&quot; ita_web &lt;- &quot;https://raw.githubusercontent.com/lucacozzuto/INFN-ISS/main/InfluNet/2021-2022/Sorveglianza%20virologica%20/Dati/Risultati%20delle%20tipizzazioni%3Asottotipizzazioni%20dei%20virus%20influenzali%20circolanti%20in%20Italia.csv&quot; install.packages(c(&quot;dplyr&quot;, &quot;reshape&quot;, &quot;stringr&quot;, &quot;ggplot2&quot;)) ## Installing packages into &#39;/home/runner/work/_temp/Library&#39; ## (as &#39;lib&#39; is unspecified) getPartDataFromJH &lt;- function(link, us=FALSE) { library(dplyr) library(reshape) library(stringr) data_raw&lt;-read.csv(link) # aggregate data and remove not useful ones if (us) { data_raw_sub&lt;-subset(data_raw, select = -c(Country_Region,UID,iso2,iso3,code3,FIPS,Admin2,Lat,Long_,Combined_Key)) if(&quot;Population&quot; %in% colnames(data_raw_sub)) { data_raw_sub$Population&lt;-NULL } colnames(data_raw_sub)[1] &lt;- &quot;Country.Region&quot; data_raw&lt;-data_raw_sub } else { data_raw$Province.State&lt;-NULL data_raw$Lat&lt;-NULL data_raw$Long&lt;-NULL } data_raw.agg&lt;-data_raw %&gt;% group_by(Country.Region) %&gt;% summarize_all(sum, na.rm = TRUE) data_raw.agg.df&lt;-as.data.frame(data_raw.agg) data_raw.agg.df$country&lt;-data_raw.agg.df$Country.Region data_raw.agg.df$Country.Region&lt;-NULL mdata&lt;-melt(data_raw.agg.df, id=c(&quot;country&quot;)) mdata$variable&lt;-as.Date(str_replace_all(str_replace(mdata$variable, &quot;X&quot;, &quot;&quot;), &#39;\\\\.&#39;, &quot;-&quot;), format=&quot;%m-%d-%y&quot;) return(mdata) } getSingleCountryData &lt;- function(data_all=NULL, country=NULL, source=NULL ) { ord_data&lt;-NULL if (!is.null(data_all)) { if (country %in% data_all$country) { single_data&lt;-data_all[grep(country, data_all$country), ] merge_data&lt;-single_data death&lt;-as.data.frame(diff(single_data$deaths)) row.names(death)&lt;-tail(row.names(single_data), -1) merge_data&lt;-merge(tail(single_data, -1), death, by=&quot;row.names&quot;) merge_data$Row.names&lt;-NULL merge_data$deaths&lt;-NULL names(merge_data)&lt;-c(&quot;country&quot;, &quot;date&quot;,&quot;cases&quot;, &quot;deaths&quot;) merge_data &lt;- merge_data[order(merge_data$date),] rownames(merge_data) &lt;- 1:nrow(merge_data) if (!grepl(&quot;PC&quot;, source, fixed = TRUE)) { pos&lt;-as.data.frame(diff(merge_data$cases)) row.names(pos)&lt;-tail(row.names(merge_data), -1) merge_data2 &lt;- merge(tail(merge_data, -1), pos, by=&quot;row.names&quot;) merge_data2$Row.names&lt;-NULL merge_data2$cases&lt;-NULL names(merge_data2)&lt;-c(&quot;country&quot;, &quot;date&quot;,&quot;deaths&quot;, &quot;cases&quot;) merge_data &lt;- merge_data2[, c(1, 2, 4, 3)] merge_data&lt;-merge_data2 } ord_data &lt;- merge_data[order(merge_data$date),] rownames(ord_data) &lt;- 1:nrow(ord_data) } } return (ord_data) } getDataFromJH&lt;-function(death_web, cases_web, single=FALSE){ deat_jh&lt;-getPartDataFromJH(death_web, single) pos_jh&lt;-getPartDataFromJH(cases_web, single) colnames(deat_jh)&lt;-c(&quot;country&quot;, &quot;date&quot;, &quot;deaths&quot;) colnames(pos_jh)&lt;-c(&quot;country&quot;, &quot;date&quot;, &quot;cases&quot;) jh_data&lt;-pos_jh jh_data$deaths&lt;-deat_jh$deaths jh_data$country&lt;-gsub(&quot;[()]&quot;,&quot;&quot;,as.character(jh_data$country)) return(jh_data) } data_web&lt;-getDataFromJH(death_web, cases_web) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union ## ## Attaching package: &#39;reshape&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## rename cases_ita&lt;-getSingleCountryData(data_web, &quot;Italy&quot;, &quot;JH&quot;) virol&lt;-read.csv(ita_web, sep=&quot;;&quot;) virol$group_vir &lt;- ifelse(virol$&quot;Virus&quot; == &quot;Positivi al SARS-CoV-2&quot;, &#39;Covid&#39;, ifelse(virol$&quot;Virus&quot; == &quot;FLU A&quot;, &#39;Flu&#39;, ifelse(virol$&quot;Virus&quot; == &quot;FLU B&quot;, &#39;Flu&#39;, &quot;other&quot;))) virol.2&lt;-virol[-grep(&quot;other&quot;, virol$group_vir), ] #virol.agg&lt;-aggregate(virol.2$N., list(virol.2$Settimana,virol.2$group_vir), sum ) virol.agg&lt;-virol.2 %&gt;% group_by(Settimana, group_vir) %&gt;% summarise(Positives = sum(N.), Samples_analized = mean(N..campioni.analizzati)) ## `summarise()` has grouped output by &#39;Settimana&#39;. You can override using the ## `.groups` argument. virol.agg.df&lt;-as.data.frame(virol.agg) raw_date&lt;-as.data.frame(str_split(virol.agg.df$Settimana, &quot; &quot;, simplify = TRUE)) raw_date$year &lt;- ifelse(raw_date$&quot;V5&quot; != &quot;&quot;, raw_date$&quot;V3&quot;, ifelse(raw_date$&quot;V4&quot; != &quot;&quot;, raw_date$&quot;V4&quot;, raw_date$&quot;V3&quot;) ) raw_date$V3&lt;-NULL raw_date$V4&lt;-NULL raw_date$V5&lt;-NULL good_dates&lt;-data.frame(&quot;day&quot; = gsub(&quot;-.*&quot;,&quot;&quot;, raw_date$V1), &quot;month&quot; = gsub(&quot;-.*&quot;,&quot;&quot;, raw_date$V2), &quot;year&quot; = raw_date$year) good_dates2&lt;-good_dates %&gt;% mutate(&quot;month&quot; = recode(good_dates$&quot;month&quot;, &#39;gennaio&#39; = &#39;1&#39;, &#39;febbraio&#39; = &#39;2&#39;, &#39;marzo&#39; = &#39;3&#39;, &#39;aprile&#39; = &#39;4&#39;, &#39;maggio&#39; = &#39;5&#39;, &#39;giugno&#39; = &#39;6&#39;, &#39;luglio&#39; = &#39;7&#39;, &#39;agosto&#39; = &#39;8&#39;, &#39;settembre&#39; = &#39;9&#39;, &#39;ottobre&#39; = &#39;10&#39;, &#39;novembre&#39; = &#39;11&#39;, &#39;dicembre&#39; = &#39;12&#39; )) virol.agg.df$date&lt;-as.Date(paste(good_dates2$month, good_dates2$day, good_dates2$year, sep=&quot;-&quot;), format=&quot;%m-%d-%Y&quot;) merge.df&lt;-merge(virol.agg.df, cases_ita, by.y = &quot;date&quot;, by.x = &quot;date&quot;) merge.df$perc &lt;- merge.df$Positives/merge.df$Samples_analized*100 library(&quot;ggplot2&quot;) pl1 &lt;- ggplot(merge.df, aes(x=date, y=Samples_analized*100)) + geom_bar(stat = &quot;unique&quot;, fill = NA, colour = &quot;#00abff&quot;) + geom_line(aes(y = Positives*100, group = group_vir, color= group_vir))+ geom_line(aes(y = cases)) + scale_y_continuous( &quot;Positives&quot;, sec.axis = sec_axis(~ . * 0.01, name = &quot;Prevalence&quot;) ) + theme_classic() print(pl1) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
